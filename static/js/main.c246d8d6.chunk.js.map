{"version":3,"sources":["logo.svg","components/BingoBoard.js","components/BallDisplay.js","helpers.js","LetsPlayBingo.js","index.js"],"names":["module","exports","__webpack_require__","p","BingoBoard","balls","this","props","ballCount","rows","B","_","where","letter","I","N","G","O","react_default","a","createElement","className","map","row","key","ball","number","called","active","React","Component","BallDisplay","currentBall","color","id","length","src","logo","alt","getLanguageText","text","LetsPlayBingo","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadVoices","setState","voices","state","synth","getVoices","say","speechEnabled","msg","SpeechSynthesisUtterance","hasOwnProperty","voice","selectedCaller","cancelSpeech","speak","window","speechSynthesis","speaking","cancel","resetGame","running","clearInterval","interval","resetBalls","index","newGame","startGame","setTimeout","toggleGame","callNumber","setInterval","delay","setDelay","e","target","value","chooseCaller","patternN","pattern","patternIsSelected","selectedPattern","callNBalls","filter","forEach","uncalled","obj","alert","newBall","Math","floor","random","ballstring","toString","charAt","choosePattern","presets","updatePattern","slot","setBalls","newBalls","bingoLetter","i","selectedBallCount","Custom","Regular or 4 Corners","Brackets","Letter X","Layer Cake","Postage Stamps","Sputnik","Diamond","Filled in Diamond","Blackout","ballCounts","onvoiceschanged","prevProps","prevState","_this2","patternArray","preset","label","components_BingoBoard","components_BallDisplay","onClick","disabled","onChange","type","min","max","step","react_select_es","name","placeholder","searchable","onBlurResetsInput","options","lang","column","clearable","href","rel","ReactDOM","render","src_LetsPlayBingo","document","getElementById"],"mappings":"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","file":"static/js/main.c246d8d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5a6f7124.svg\";","/*\n *  Bingo Board Class\n *  Karol Brennan\n *  5.13.2018\n *  This class is used to display the bingo board\n */\nimport React from 'react';\nimport _ from 'underscore';\n\nclass BingoBoard extends React.Component {\n  render() {\n    let balls = this.props.balls;\n    let ballCount = this.props.ballCount;\n    let rows = {\n      B: _.where(balls, {letter: \"B\"}),\n      I: _.where(balls, {letter: \"I\"}),\n      N: _.where(balls, {letter: \"N\"}),\n      G: _.where(balls, {letter: \"G\"}),\n      O: _.where(balls, {letter: \"O\"})\n    };\n\n    return (\n      <div className=\"board notranslate\">\n        {_.map(rows, (row, letter) => (\n          <div key={\"row\" + letter} className=\"board-row\">\n            <div key={letter} className=\"letter\">{letter}</div>\n            {_.map(row, ball => (\n              <div key={ball.letter + ball.number}\n                   className={ball.called && ball.active ? \"active ball ball-\" + ballCount : ball.called ? \"called ball ball-\" + ballCount : \"ball ball-\" + ballCount}>\n                {ball.number}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  };\n}\n\nexport default BingoBoard;","/*\n *  Ball Display Class\n *  Karol Brennan\n *  5.13.2018\n *  This class is used to display the current ball.\n */\nimport React from 'react';\nimport _ from 'underscore';\nimport logo from '../logo.svg';\n\nclass BallDisplay extends React.Component {\n  render() {\n    let currentBall = _.where(this.props.balls, {active: true})[0];\n    if (currentBall) {\n      let color = 'white';\n      switch (currentBall.letter) {\n        case 'B':\n          color = 'blue';\n          break;\n        case 'I':\n          color = 'red';\n          break;\n        case 'N':\n          color = 'white';\n          break;\n        case 'G':\n          color = 'green';\n          break;\n        case 'O':\n          color = 'orange';\n          break;\n        default:\n          break;\n      }\n      return (\n        <div id=\"ball\" className={color + \" relative notranslate\"}>\n          <div id=\"ballcount\">{_.where(this.props.balls, {called: true}).length}</div>\n          <div className=\"content\">\n            <span>\n              {currentBall.letter}<br />{currentBall.number}\n            </span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div id=\"ball\" className=\"white relative notranslate\">\n          <div id=\"ballcount\">{_.where(this.props.balls, {called: true}).length}</div>\n          <div className=\"content\">\n            <span>\n             <img src={logo} alt=\"Lets Play Bingo Logo\"/>\n            </span>\n          </div>\n        </div>\n      )\n    }\n  };\n}\n\nexport default BallDisplay;","let getLanguageText = (text) => {\n  switch (text) {\n    case 'ar-SA':\n      return 'Arabic (Saudi Arabia)';\n    case 'cs-CZ':\n      return 'Czech (Czech Republic)';\n    case 'da-DK':\n      return 'Danish (Denmark)';\n    case 'de-DE':\n      return 'German';\n    case 'el-GR':\n      return 'Greek (Greece)';\n    case 'en':\n      return 'English';\n    case 'en-AU':\n      return 'English (Australia)';\n    case 'en-GB':\n      return 'UK English';\n    case 'en-IE':\n      return 'English (Ireland)';\n    case 'en-IN':\n      return 'English (India)';\n    case 'en-US':\n      return 'US English';\n    case 'en-ZA':\n      return 'English (South Africa)';\n    case 'es-AR':\n      return 'Spanish (Argentina)';\n    case 'es-ES':\n      return 'Spanish (Spain)';\n    case 'es-MX':\n      return 'Spanish (Mexico)';\n    case 'es-US':\n      return 'Spanish (United States)';\n    case 'fi-FI':\n      return 'Finnish (Finland)';\n    case 'fr-CA':\n      return 'French (Canada)';\n    case 'fr-FR':\n      return 'French (France)';\n    case 'he-IL':\n      return 'Hebrew';\n    case 'hi-IN':\n      return 'Hindi (India)';\n    case 'hu-HU':\n      return 'Hungarian (Hungary)';\n    case 'id-ID':\n      return 'Indonesian';\n    case 'it-IT':\n      return 'Italian';\n    case 'ja-JP':\n      return 'Japanese';\n    case 'ko-KR':\n      return 'Korean (Korea)';\n    case 'nb-NO':\n      return 'Norwegian (Bokm?l) (Norway)';\n    case 'nl-BE':\n      return 'Dutch (Belgium)';\n    case 'nl-NL':\n      return 'Dutch (Netherlands)';\n    case 'pl-PL':\n      return 'Polish (Poland)';\n    case 'pt-PT':\n      return 'Portuguese (Portugal)';\n    case 'pt-BR':\n      return 'Portuguese (Brazil)';\n    case 'ro-RO':\n      return 'Romanian (Romania)';\n    case 'ru-RU':\n      return 'Russian (Russia)';\n    case 'sk-SK':\n      return 'Slovak (Slovakia)';\n    case 'sv-SE':\n      return 'Swedish';\n    case 'th-TH':\n      return 'Thai (Thailand)';\n    case 'tr-TR':\n      return 'Turkish (Turkey)';\n    case 'zh-CN':\n      return 'Chinese (S)';\n    case 'zh-HK':\n      return 'Chinese (Hong Kong)';\n    case 'zh-TW':\n      return 'Chinese (T)';\n    default:\n      return text;\n  }\n};\n\n\n\nexport {\n  getLanguageText\n};","/*\n * Let's Play Bingo\n * App written by Karol Brennan\n * http://karolbrennan.com\n * http://github.com/karolbrennan\n */\nimport React, {Component} from 'react';\nimport _ from 'underscore';\nimport Select from 'react-select';\n// Styles and Images\nimport logo from './logo.svg';\nimport 'react-select/dist/react-select.css';\n// Components\nimport BingoBoard from './components/BingoBoard.js';\nimport BallDisplay from './components/BallDisplay.js';\n// Helpers\nimport {getLanguageText} from './helpers.js';\n\n\nclass LetsPlayBingo extends Component {\n\n  /*\n   * Constructor\n   * State Variables\n   * balls: balls object, holds letter, number, called and active statues\n   * running: determines if the game is presently running\n   * interval & delay: how often the balls are generated\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      balls: {},\n      newGame: true,\n      running: false,\n      interval: 0,\n      delay: 10000,\n      selectedCaller: null,\n      speechEnabled: window.hasOwnProperty('speechSynthesis'),\n      synth: window.speechSynthesis,\n      voices: [],\n      selectedPattern: null,\n      pattern: {\n        B: [false, false, false, false, false],\n        I: [false, false, false, false, false],\n        N: [false, false, false, false, false],\n        G: [false, false, false, false, false],\n        O: [false, false, false, false, false]\n      },\n      presets: {\n        \"Custom\": {\n          B: [false, false, false, false, false],\n          I: [false, false, false, false, false],\n          N: [false, false, false, false, false],\n          G: [false, false, false, false, false],\n          O: [false, false, false, false, false]\n        },\n        \"Regular or 4 Corners\": {\n          B: [true, false, false, false, true],\n          I: [false, true, false, false, false],\n          N: [false, false, true, false, false],\n          G: [false, false, false, true, false],\n          O: [true, false, false, false, true]\n        },\n        \"Brackets\": {\n          B: [true, true, false, true, true],\n          I: [true, false, false, false, true],\n          N: [false, false, false, false, false],\n          G: [true, false, false, false, true],\n          O: [true, true, false, true, true]\n        },\n        \"Letter X\": {\n          B: [true, false, false, false, true],\n          I: [false, true, false, true, false],\n          N: [false, false, true, false, false],\n          G: [false, true, false, true, false],\n          O: [true, false, false, false, true]\n        },\n        \"Layer Cake\": {\n          B: [true, false, true, false, true],\n          I: [true, false, true, false, true],\n          N: [true, false, true, false, true],\n          G: [true, false, true, false, true],\n          O: [true, false, true, false, true]\n        },\n        \"Postage Stamps\": {\n          B: [true, true, false, false, false],\n          I: [true, true, false, false, false],\n          N: [false, false, false, false, false],\n          G: [false, false, false, true, true],\n          O: [false, false, false, true, true]\n        },\n        \"Sputnik\": {\n          B: [true, false, false, false, true],\n          I: [false, true, true, true, false],\n          N: [false, true, true, true, false],\n          G: [false, true, true, true, false],\n          O: [true, false, false, false, true]\n        },\n        \"Diamond\": {\n          B: [false, false, true, false, false],\n          I: [false, true, false, true, false],\n          N: [true, false, false, false, true],\n          G: [false, true, false, true, false],\n          O: [false, false, true, false, false]\n        },\n        \"Filled in Diamond\": {\n          B: [false, false, true, false, false],\n          I: [false, true, true, true, false],\n          N: [true, true, true, true, true],\n          G: [false, true, true, true, false],\n          O: [false, false, true, false, false]\n        },\n        \"Blackout\": {\n          B: [true, true, true, true, true],\n          I: [true, true, true, true, true],\n          N: [true, true, true, true, true],\n          G: [true, true, true, true, true],\n          O: [true, true, true, true, true]\n        }\n      },\n      selectedBallCount: 75,\n      ballCounts: [{\n        text: '50',\n        value: 50\n      },{\n        text: '75',\n        value: 75\n      },{\n        text: '90',\n        value: 90\n      }]\n    };\n    // if speech is enabled, set up a method to load voices if they change\n    if (this.state.speechEnabled) {\n      this.state.synth.onvoiceschanged = this.loadVoices;\n    }\n  };\n\n\n  /* \n   *  Component mounted\n   *  set up ball count dynamically\n   */\n  componentDidMount() {\n    this.setBalls();\n  }\n\n  /* \n   *  Component unmounting\n   *  cleaning out values\n   */\n  componentWillUnmount() {\n    this.setState({balls: {}})\n  }\n\n  /* \n   *  Component updated\n   *  Using it to watch for state changes\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedBallCount !== prevState.selectedBallCount) {\n      this.setBalls();\n    }\n  }\n\n  /*\n   *  Load Voices Function\n   *  Will load voices as they change within the browser\n   */\n  loadVoices = () => {\n    this.setState({voices: this.state.synth.getVoices()})\n  };\n\n  /*\n   *  Say Function\n   *  Will speak any string that is passed in\n   */\n  say = (text) => {\n    if (this.state.speechEnabled) {\n      // Create a new instance of SpeechSynthesisUtterance.\n      let msg = new SpeechSynthesisUtterance();\n      msg.text = text;\n      if (this.state.hasOwnProperty('selectedCaller')) {\n        msg.voice = this.state.selectedCaller;\n      }\n      this.cancelSpeech();\n      this.state.synth.speak(msg);\n    }\n  };\n\n  cancelSpeech = () => {\n    if(window.speechSynthesis.speaking){\n      window.speechSynthesis.cancel();\n    }\n  };\n\n  /*\n   *  Reset Game Function\n   *  Map out the original balls array and update\n   *  active and called statuses to false\n   */\n  resetGame = () => {\n    this.cancelSpeech();\n    if(this.state.running === true){\n      clearInterval(this.state.interval);\n    }\n    let resetBalls = this.state.balls;\n    _.map(resetBalls, (ball, index) => {\n      resetBalls[index].active = false;\n      resetBalls[index].called = false;\n    });\n    this.setState({balls: resetBalls, newGame: true, running: false});\n  };\n\n  startGame = () => {\n    if(this.state.newGame) {\n      this.say(\"Let's Play Bingo!\");\n    }\n    setTimeout(this.toggleGame, 1500);\n  };\n\n  /*\n   *  Toggle Game Function\n   *  Check the opposite of the current running state, this will determine our new state\n   *  If the game is now running, call a number right away then set a new interval\n   *  Otherwise, clear the interval\n   *  Set the current running state\n   */\n  toggleGame = () => {\n    if (!this.state.running === true) {\n      this.callNumber();\n      this.setState({interval: setInterval(this.callNumber, this.state.delay)});\n    } else {\n      clearInterval(this.state.interval);\n    }\n    this.setState({newGame: false, running: !this.state.running});\n  };\n\n  /*\n   *  Set Delay Function\n   *  Fires when the user uses the delay slider\n   *  If the game is running it'll clear the existing interval and set a new one\n   *  Otherwise it will just update the delay\n   */\n  setDelay = (e) => {\n    if (this.state.running) {\n      clearInterval(this.state.interval);\n      this.setState({delay: e.target.value, interval: setInterval(this.callNumber, e.target.value)});\n    } else {\n      this.setState({delay: e.target.value});\n    }\n  };\n\n\n  /*\n   *  Choose Caller Function\n   */\n  chooseCaller = (e) => {\n    if (e === null) {\n      // default\n      this.setState({selectedCaller: this.state.voices[0]});\n    } else {\n      let voice = this.state.voices[e.value];\n      voice.value = e.value;\n      this.setState({selectedCaller: voice});\n    }\n  };\n\n  /*\n   *  Call Number Function\n   *  Will get all of the balls, find the active one and reset it\n   *  Grabs uncalled balls and determines if there are still uncalled balls\n   *  Otherwise, it'll generate a random ball, set it to called and active\n   */\n  callNumber = () => {\n    let patternN = this.state.pattern.N;\n    let patternIsSelected = this.state.selectedPattern;\n    // Need to check if the pattern contains any N's (except for the free space)\n    let callNBalls = (patternN[0] === false && patternN[1] === false && patternN[3] === false && patternN[4] === false);\n    // get all balls\n    let balls = this.state.balls;\n    // get active bll and reset\n    let active = _.filter(balls, {active: true});\n    active.forEach(ball => {ball.active = false;});\n    // get all uncalled balls\n    // also check if pattern needs N balls called or not\n    let uncalled = []\n    if (callNBalls && patternIsSelected) {\n      uncalled = _.filter(balls,function(obj) {\n        return (!obj.called && obj.letter !== 'N')\n      });\n    } else {\n      uncalled = _.filter(balls, {called: false});\n    }\n    if (uncalled.length === 0) {\n      alert(\"I've given you all I've got captain! I haven't got any more balls!\");\n    } else {\n      // choose a random ball\n      let randomball = uncalled[Math.floor(Math.random() * uncalled.length)];\n      let newBall = balls[randomball.number];\n      // set status of ball as called and active\n      newBall.called = true;\n      newBall.active = true;\n      // call the new ball, first call it all together, then call each character individually\n      let ballstring = newBall.number.toString();\n      this.say([newBall.letter, newBall.number, ' ', ' ', newBall.letter, ' ',\n        (ballstring.length === 2 ? [ballstring.charAt(0), ' ', ballstring.charAt(1)] : newBall.number)]);\n      // update the state to re-render the board\n      this.setState({balls: balls});\n    }\n  };\n\n    /*\n   *  Choose Pattern Function\n   *  This sets the selected pattern\n   *  Sets to default if no pattern is selected or selection is cleared.\n   */\n  choosePattern = (e) => {\n    if (e === null) {\n      this.setState({\n        selectedPattern: null,\n        pattern: {\n          B: [false, false, false, false, false],\n          I: [false, false, false, false, false],\n          N: [false, false, false, false, false],\n          G: [false, false, false, false, false],\n          O: [false, false, false, false, false]\n        }\n      });\n    } else {\n      this.setState({\n        selectedPattern: e.value,\n        pattern: this.state.presets[e.value]\n      });\n    }\n  };\n\n  /*\n   *  Update Pattern Function\n   *  As user clicks on slots for the pattern, update the pattern in the state\n   */\n  updatePattern = (letter, index, slot) => {\n    let pattern = this.state.pattern;\n    pattern[letter][index] = !slot;\n    this.setState({selectedPattern: \"Custom\", pattern: pattern});\n  };\n\n  setBalls = () => {\n    let newBalls = {};\n    let bingoLetter = '';\n    for (let i = 1; i <= this.state.selectedBallCount; i++) {\n      if (i/this.state.selectedBallCount <= 0.2) {\n        bingoLetter = 'B';\n      } else if (i/this.state.selectedBallCount <= 0.4) {\n        bingoLetter = 'I';\n      } else if (i/this.state.selectedBallCount <= 0.6) {\n        bingoLetter = 'N';\n      } else if (i/this.state.selectedBallCount <= 0.8) {\n        bingoLetter = 'G';\n      } else {\n        bingoLetter = 'O';\n      }\n      newBalls[i] = {\n        letter: bingoLetter,\n        number: i,\n        called: false,\n        active: false\n      };\n    }\n    this.setState({balls: newBalls});\n  };\n\n  /*\n   *  Render Method\n   *  Displays the bingo page\n   */\n  render() {\n    // For the pattern dropdown\n    let pattern = this.state.pattern;\n    let patternArray = [_.map(this.state.presets, (preset, value) => (\n      {value: value, label: value}\n    ))];\n\n    return (\n      <div className=\"App\">\n\n        <section id=\"board\">\n          <div className=\"row flex\">\n            <div className=\"col c85\">\n              <BingoBoard balls={this.state.balls}  ballCount={this.state.selectedBallCount}/>\n            </div>\n            <div className=\"col c15 padding\">\n              <BallDisplay balls={this.state.balls}/>\n            </div>\n          </div>\n        </section>\n\n        <section id=\"buttons\">\n          <div className=\"row\">\n            <div className=\"col c40\">\n              <div className=\"row\">\n                <div className=\"col c100\">\n                  <div className=\"row\">\n                    <div className=\"col col30\">\n                      <button onClick={this.state.newGame ? this.startGame : this.toggleGame}>\n                        {this.state.newGame ? 'Start' : this.state.running ? 'Pause' : 'Resume'}\n                      </button>\n                    </div>\n                    <div className=\"col col70\">\n                      <div className=\"btn-group\">\n                        {_.map(this.state.ballCounts, (ball, index) => (\n                          <button \n                            key={index} \n                            onClick={() => this.setState({selectedBallCount: ball.value})} \n                            disabled={!this.state.newGame || this.state.running}\n                            className={this.state.selectedBallCount === ball.value ? 'selected' : ''}\n                          >\n                            {ball.text}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col c100\">\n                  <button onClick={this.callNumber} disabled={this.state.running ? 'disabled' : ''}>Next Number</button>\n                  <button onClick={this.resetGame}>Reset</button>\n                </div>\n              </div>\n            </div>\n            <div className=\"col c40 text-center\">\n              <div id=\"speed\">\n                <span>Slow</span><input onChange={(e) => this.setDelay(e)} type=\"range\" value={this.state.delay}  min=\"5000\" max=\"16000\" step=\"1000\"/><span>Fast</span>\n              </div>\n            </div>\n            <div className=\"col c20 text-right\">\n              {this.state.speechEnabled ?\n                <Select name=\"voiceselect\" placeholder=\"Choose Caller\" searchable\n                        onBlurResetsInput={true}\n                        value={this.state.selectedCaller ? this.state.selectedCaller.value : ''}\n                        onChange={this.chooseCaller}\n                        options={_.map(this.state.voices, (voice, index) => (\n                          {value: index, label: (voice.name + ' / ' + getLanguageText(voice.lang))}\n                        ))}\n                />\n              : \"Sorry, your browser doesn't support our vocal caller! Try Chrome!\"}\n            </div>\n          </div>\n        </section>\n\n        <section>\n          <div className=\"row\">\n            <div className=\"col c20 padding text-center\">\n            <div id=\"bingopattern\" className=\"notranslate\">\n                {_.map(pattern, (column, letter) => (\n                  <div key={letter} className=\"pattern-col\">\n                    <div className=\"pattern-letter\">{letter}</div>\n                    {_.map(column, (slot, index) => (\n                      <div key={letter + index}\n                          className={slot ? \"selected pattern-slot\" : \"pattern-slot\"}\n                          onClick={(e) => this.updatePattern(letter, index, slot)}>&nbsp;\n                      </div>\n                    ))}\n                  </div>\n                ))}\n                <Select\n                  name=\"patternselect\"\n                  placeholder=\"Choose Pattern\"\n                  value={this.state.selectedPattern}\n                  searchable\n                  onBlurResetsInput={true}\n                  clearable\n                  onChange={this.choosePattern}\n                  options={patternArray[0]}\n                />\n              </div>\n            </div>\n            <div className=\"col c60 padding\">\n              <p className=\"description\">Use this free bingo caller to host your own bingo games at home! You\n              provide the cards, we generate the bingo numbers! Completely free bingo app - no downloads necessary!\n              </p>\n              <p className=\"disclaimer\">\n                LetsPlayBingo.io does not intend for the bingo caller contained on this website to be used for illegal or gambling purposes. The information and bingo caller contained on this website is for entertainment purposes only. This website, its owners and associates do not have any control over the use of this bingo caller and cannot be held liable for any monetary or other losses incurred by unapproved use of this bingo caller or generated bingo cards.\n              </p>\n              <div className=\"top-bottom-padding\">\n                <div className=\"addthis_inline_share_toolbox\"></div>\n              </div>\n            </div>\n            <div className=\"col c20 text-center padding\">\n              <img className=\"logo\" src={logo} alt=\"Let's Play Bingo Logo\"/>\n              <p className=\"intl\">We're now international!</p>\n              <div id=\"google_translate_element\"></div>\n            </div>\n          </div>\n        </section>\n\n        <footer>\n          <div className=\"row\">\n            <div className=\"col c25 text-left\">\n              <p>For entertainment purposes only.</p>\n            </div>\n            <div className=\"col c50 text-center\">\n              <p>Let's Play Bingo! © 2018 <a href=\"http://karolbrennan.com\" target=\"_blank\" rel=\"noopener noreferrer\">Karol Brennan</a></p>\n            </div>\n            <div className=\"col c25 text-right\">\n              <p>Check out this project on <a href=\"http://github.com/gardenofegan/letsplaybingo\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></p>\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default LetsPlayBingo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport LetsPlayBingo from './LetsPlayBingo';\nReactDOM.render(<LetsPlayBingo />, document.getElementById('root'));"],"sourceRoot":""}